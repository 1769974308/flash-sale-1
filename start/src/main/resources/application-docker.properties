#mybatis
mybatis.config-location=classpath:mybatis-config.xml
spring.datasource.initialization-mode:always
#创建表的MySql语句位置
spring.datasource.schema=classpath:TableCreationDDL.sql
# 应用名称
spring.application.name=flash-sale
# 应用服务 WEB 访问端口
server.port=8090
# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址
spring.datasource.url=jdbc:mysql://mysql:3306/flash_sale?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
# 数据库用户名&密码：
spring.datasource.username=thoughts-beta
spring.datasource.password=thoughts-beta
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.actionworks.flashsale.mybatis.entity
# Sentinel 控制台地址
spring.cloud.sentinel.transport.dashboard=sentinel:8858
# 取消Sentinel控制台懒加载
# 默认情况下 Sentinel 会在客户端首次调用的时候进行初始化，开始向控制台发送心跳包
# 配置 sentinel.eager=true 时，取消Sentinel控制台懒加载功能
spring.cloud.sentinel.eager=true
# 如果有多套网络，又无法正确获取本机IP，则需要使用下面的参数设置当前机器可被外部访问的IP地址，供admin控制台使用
# spring.cloud.sentinel.transport.client-ip=
spring.cloud.sentinel.datasource.ds1.nacos.server-addr=nacos:8848
spring.cloud.sentinel.datasource.ds1.nacos.group-id=THOUGHTS-BETA-GROUP
spring.cloud.sentinel.datasource.ds1.nacos.data-id=THOUGHTS-BETA-SENTINEL-CONFIGURATION
spring.cloud.sentinel.datasource.ds1.nacos.data-type=json
spring.cloud.sentinel.datasource.ds1.nacos.rule-type=flow
spring.cloud.sentinel.datasource.ds1.nacos.username=nacos
spring.cloud.sentinel.datasource.ds1.nacos.password=nacos
spring.redis.host=redis
#Redis服务器连接端口
spring.redis.port=6379
#Redis服务器连接密码（默认为空）
spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=30000
spring.redis.address=redis://redis:6379


management.metrics.export.datadog.enabled=false
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.security.enabled=false
management.metrics.export.prometheus.enabled=true
management.metrics.export.jmx.enabled=true




